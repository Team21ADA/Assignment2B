<!DOCTYPE html>
<html>
    
    <head>
        <title>Record Page</title>
        <link rel="stylesheet" href="https://storage.googleapis.com/code.getmdl.io/1.0.4/material.indigo-pink.min.css">
        <script src="https://storage.googleapis.com/code.getmdl.io/1.0.4/material.min.js"></script>
        <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">

    </head>
    
    <style type="text/css">
        html, body { height: 100%; margin: 0; padding: 0; }
        #map { height: 100%; }
        /*.stopwatch { background-color: azure; color: red;  padding: 5px; border:none; width: 220px; margin:15px 0; float:center; text-align: center;}
.lap { color: red;  padding: 1px; border:none; height:75%; width: 220px; margin:15px 0;}
.button { width: 220px; margin:2px; }
        
        #my_button{
          position:absolute;
          bottom:2%;
          color: #fff;
          background-color: #4d90fe;
          padding: 11px;

          border: 1px solid transparent;
          border-radius: 2px;
          box-sizing: border-box;
          -moz-box-sizing: border-box;

          outline: none;
          box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
          alignment-baseline:central;
          width:30%;
          left:5%;
          text-align:center;
          text-decoration:none;


          margin:0px auto;}


         #my_button:hover{
             background-color:#3B6EC2;}*/
    </style>
    
    
    <body>
        
<!------------------------------------MDL------------------------------------->
        <!-- Always shows a header, even in smaller screens. -->
        <div class="mdl-layout mdl-js-layout mdl-layout--fixed-header">
            <header class="mdl-layout__header">
                <div class="mdl-layout__header-row">
                    <!-- Title -->
                    <span class="mdl-layout-title">Record</span>
                    <!-- Add spacer, to align navigation to the right -->
                    <div class="mdl-layout-spacer"></div>
                    
                    <!-- Navigation. We hide it in small screens. -->
                    <nav class="mdl-navigation mdl-layout--large-screen-only">
                        <a class="mdl-navigation__link" href="">View</a>
                        <a class="mdl-navigation__link" href="">Record</a>
                        <a class="mdl-navigation__link" href="">View</a>
                    </nav>
                </div>
            </header>
  
            <div class="mdl-layout__drawer">
                <span class="mdl-layout-title">Menu</span>
                <nav class="mdl-navigation">
                    <a class="mdl-navigation__link" href="">Launch</a>
                    <a class="mdl-navigation__link" href="">Record</a>
                    <a class="mdl-navigation__link" href="">View</a>
                </nav>
            </div>
  
            
        </div>
        </header>
<!-------------------------------------MDL------------------------------------- 

    
<!-------------------------------------map------------------------------------->
    <div id="mapholder"></div>
    <script src="http://maps.google.com/maps/api/js?sensor=false"></script>
    <!--<script src="MapPageController.js" type="text/javascript"></script>
    <script src="MapWithOverlay.js" type="text/javascript"></script>
    <script src="RoutesListPageController.js" type="text/javascript"></script>
    <script src="L.CanvasOverlay.js" type="text/javascript"></script>
    <script src="Solution.js" type="text/javascript"></script>--------->

    <script>
        // <!-- initialise all the variable for later use -->
       // var gpsData ={};
        //var Route = {dateCreated:"", locations:[], times: [], storageKey: null};

        
        var x = document.getElementById("demo");
        
        function getLocation() {
            
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition, showError);
            }
            else {
                x.innerHTML = "Geolocation is not supported by this browser.";
            }
        }

        function showPosition(position) {
            lat = position.coords.latitude;
            lon = position.coords.longitude;
            latlon = new google.maps.LatLng(lat, lon);
            mapholder = document.getElementById('mapholder')
            mapholder.style.height = '60%';
            mapholder.style.width = '100%';
            
           /* // create the path using array
            var plotCoordinates = [latlon];
            plotCoordinates.push(new google.maps.LatLng(lat, lon));*/
            

            var myOptions = {
                center:latlon,zoom:14,
                mapTypeId:google.maps.MapTypeId.ROADMAP,
                mapTypeControl:false,
                navigationControlOptions:{style:google.maps.NavigationControlStyle.SMALL}
            }
    
            var map = new google.maps.Map(document.getElementById("mapholder"), myOptions);
            var marker = new google.maps.Marker({position:latlon,map:map,title:"You are here!"});
            
           /* // from prac 8 
            var bounds = new google.maps.LatLngBounds(
                marker1.getPosition()
                )
            // map.fitBounds(bounds);
            
            // to update?????????????????????????????
            google.maps.event.addListener(marker1, 'position_changed', update);

            // to draw?????????????????????????
          flightPath = new google.maps.Polyline({
            path: latlon,
            geodesic: true,
            strokeColor: '#FF0000',
            strokeOpacity: 1.0,
            strokeWeight: 2,
            map: map,
          });*/
            document.getElementById("myPosition").innerHTML = "Current Location: " + latlon;
        }

        function showError(error) {
            switch(error.code) {
                case error.PERMISSION_DENIED:
                    x.innerHTML = "User denied the request for Geolocation."
                    break;
                case error.POSITION_UNAVAILABLE:
                    x.innerHTML = "Location information is unavailable."
                    break;
                case error.TIMEOUT:
                    x.innerHTML = "The request to get user location timed out."
                    break;
                case error.UNKNOWN_ERROR:
                    x.innerHTML = "An unknown error occurred."
                    break;
            }
        }
        
       /* // pan location
        google.maps.event.addListener(map,'center_changed',function() {
          window.setTimeout(function() {
            map.panTo(marker.getPosition());
          },3000);
        });*/
        
        getLocation();
    
    </script>
<!----------------------------------------map--------------------------------------->  
    
<!----------------------------------------function------------------------------------->
    <script>
        /////////////////////////////////////////////////// calculate distance
        function distance(latitude1, longitude1, latitude2, longitude2) {
            // R is the radius of the earth in kilometers
            var R = 6378137;

            var deltaLatitude = (latitude2-latitude1) * Math.PI / 180;
            var deltaLongitude = (longitude2-longitude1) * Math.PI / 180;
            var latitude1 = latitude1 * Math.PI / 180;
            var latitude2 = latitude2 * Math.PI / 180;

            var a = Math.sin(deltaLatitude/2) * Math.sin(deltaLatitude/2) + Math.cos(latitude1) * Math.cos(latitude2) * Math.sin(deltaLongitude/2) * Math.sin(deltaLongitude/2);

            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
            var d = R * c;
            return d;
        }
        
            
        if ((lastLat != null) && (lastLong != null)) {
            var lastLat = lat;
            var lastLon = lon;
            var totalDistance = distance(lat, lon, lastLat, lastLon);
            document.getElementById("totalDist").innerHTML = "Total Distance: " + totalDistance.toFixed(2) + " m";
            //updateStatus("Location successfully updated.");
        }
        
        
    </script>
 
<!---------------------------------------function-------------------------------------->
    
<!--------------------------------------stopwatch--------------------------------------->
    <script>
        var sec = 0;  
        var mins = 0; 
        var hour = 0; 

        function changestat(){

            var a = document.getElementById('butn').value;  //take the value by id called 'butn' and store that in a variable called 'a'

            if(a == 'Start') {  //declare if block if a is equal to 'Start'
                document.getElementById('butn').value='Pause';  //change the value of 'butn' from 'Start' to 'Pause'
            }  //end of if block

            else if(a=='Pause'){  //declare else if block if a is equal to 'Pause'
                document.getElementById('butn').value='Start';  //change the value of 'butn' from 'Pause' to 'Start'
            } //end of else if block

            stopwatch();  //call the function called stopwatch()
        }  //end of changestat() function 

    
        function stopwatch(){ //declare a function called stopwatch()
            var x=document.getElementById('butn').value; //take the value by id called 'butn' and store that in a variable called 'x'

            if (x=='Pause'){  //declare if block if x is equal to 'Pause'
                sec++;  //keep adding '1' to the value of sec variable
  
                if (sec == 60) {  //declare if block if sec is equal to '60'
                    sec = 0;  //set the value of sec to '0'
                    mins = mins + 1;   //add '1' to current value of mins
                }  //end of if block
                
                else {  //start of else block
                    mins = mins;  //the value of mins remains same
                }  //end of else block
                
                if (mins == 60) {  //declare if block if mins is equal to '60'
                    mins = 0;   //set the value of mins to '0'
                    hour += 1;   //add '1' to current value of hours
                }  //end of if block

                if (sec<=9) { //declare if block if sec is less than or equal to '9'
                    sec = "0" + sec;   //here we add 0 in front of the number  eg: 01
                }  //end of if block
 
                var stwa=document.getElementById('stwa'); //take the element by id called 'stwa' and store that in a variable called 'stwa'

                stwa.value= ((hour<=9) ? "0"+hour : hour) + " : " + ((mins<=9) ? "0" + mins : mins) + " : " + sec;  //set the value in stwa text field  eg:00:02:01

                SD=window.setTimeout("stopwatch();", 1000);  //this line will refresh the value of stwa textfield every second
            } 
        }  

    function reset(){   //declare a function called reset()

        var stwa=document.getElementById('stwa');  //take the element by id called 'stwa' and store that in a variable called 'stwa'
        sec = 0;  //set the value of sec to '0'
        mins = 0; //set the value of mins to '0'
        hour = 0;  //set the value of hour to '0'
        stwa.value='00 : 00 : 00';  //display 00:00:00 in text field
        
        changestat();  //call the function called changestat()
    }  //end of reset() function

    </script> 

    <input type="button" value="Start" id="butn"  onClick="changestat()"/>
    <input type="button" value="Reset" id="reset"  onClick="reset()"/> 
    <input type="text" value="00 : 00 : 00" id="stwa"/>
   
<!------------------------------------------stopwatch--------------------------------->
 
<!----------------------------------------display------------------------------------->
    <div id="container">
        <section>
            <article>
                <p id="myPosition">Current Location: </p>
                <p id="totalDistance">Total Distance: </p>
                <p id="aveSpeed">Average Speed:</p>

            </article>
        </section>
    </div>
        
<!----------------------------------------display------------------------------------->
    
    
     <!-- Include the Google Maps API library - required for embedding maps
        <script src="http://maps.googleapis.com/maps/api/js?sensor=false">/*//**/
    <script type="text/javascript">

        // The latitude and longitude of your business / place
        var position = [3.063277, 101.59982];
        
        function showGoogleMaps() {
            var latLng = new google.maps.LatLng(position[0], position[1]);
 
            var mapOptions = {
                zoom: 15, // initialize zoom level - the max value is 21
                streetViewControl: false, // hide the yellow Street View pegman
                scaleControl: true, // allow users to zoom the Google Map
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                center: latLng
            };

            map = new google.maps.Map(document.getElementById('googlemaps'),
        mapOptions);
            
            // Show the default red marker at the location
            marker = new google.maps.Marker({
                position: latLng,
                map: map,
                draggable: false,
                animation: google.maps.Animation.DROP
            });
        }
        
        google.maps.event.addDomListener(window, 'load', showGoogleMaps)-->
    
    
    </body>

</html>